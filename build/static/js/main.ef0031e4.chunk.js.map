{"version":3,"sources":["components/components1/card.component.js","components/card-list/card-listcomponents.js","components/searchbox/searchbox1.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","key","SearchBox","placeholder","handlechange","type","onChange","app","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAEaA,G,kBAAM,SAAAC,GACf,OACA,yBAAKC,UAAU,kBACX,yBACAC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,uBACHC,IAAI,YAEJ,4BAAKL,EAAMG,QAAQG,MACnB,2BAAIN,EAAMG,QAAQI,UCPbC,EAAS,SAAAR,GACtB,OACA,yBAAKC,UAAU,aACdD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,kBAAC,EAAD,CAAMQ,IAAKR,EAAQC,GAAID,QAASA,SCJnBS,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,2BACAb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCCG,E,kDAnCb,aAAc,IAAD,8BACX,gBAYFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAZpC,EAAKC,MAAM,CACTd,SAAS,GACTW,YAAc,IAJL,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAASmB,S,oBAKzC,WACE,MAA6BC,KAAKN,MAA5Bd,EAAN,EAAMA,SAASW,EAAf,EAAeA,YACTU,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAAGA,EAAQG,KAAK0B,cAAcC,SAASb,EAAYY,kBACrG,OACE,yBAAK/B,UAAU,OAEZ,+CACA,kBAAC,EAAD,CACAY,YAAY,kBAEbC,aAAce,KAAKf,eAEf,kBAAC,EAAD,CAAUL,SAAUqB,S,GA7BZI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ef0031e4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\nexport const Card= props=>{\r\n    return(\r\n    <div className='card-container'>\r\n        <img \r\n        src={`https://robohash.org/${props.monster.id}set=set2&size=15x15`}\r\n        alt=\"monster\" \r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    );\r\n}","import React from \"react\";\r\nimport './card-list.style.css';\r\nimport { Card } from \"../components1/card.component\";\r\nexport const Cardlist=props=>{\r\nreturn(\r\n<div className='card-list'>\r\n{props.monsters.map(monster => (\r\n<Card key={monster.id} monster={monster}/>\r\n))}\r\n</div>\r\n);\r\n}","import React from 'react';\r\nimport './searchbox.style.css';\r\n\r\nexport const SearchBox=({placeholder,handlechange})=> (\r\n    <input\r\n    className='search' \r\n    type=\"search\" \r\n    placeholder={placeholder} \r\n    onChange={handlechange}\r\n        />\r\n);","import './App.css';\nimport React, { Component } from 'react';\nimport {Cardlist} from './components/card-list/card-listcomponents';\nimport {SearchBox} from './components/searchbox/searchbox1';\nclass app extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[],\n      searchfield : ''  \n    };\n     \n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response =>response.json() )\n    .then(users => this.setState({monsters:users}));\n  }\n  handlechange=(e)=>{\n    this.setState({searchfield:e.target.value}\n     )}\n  render(){\n    const{monsters,searchfield}= this.state;\n    const FilteredMonsters = monsters.filter(monster =>monster.name.toLowerCase().includes(searchfield.toLowerCase()))\n  return (\n    <div className=\"App\">\n    \n       <h1>Monster Rolodex</h1>\n       <SearchBox\n       placeholder='search-monsters'\n      // \n      handlechange={this.handlechange}\n          />\n          <Cardlist monsters={FilteredMonsters} />\n       \n    </div>\n  );\n  }\n}\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}