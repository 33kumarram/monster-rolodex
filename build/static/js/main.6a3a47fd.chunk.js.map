{"version":3,"sources":["logo.svg","components/components1/card.component.js","components/card-list/card-listcomponents.js","components/searchbox/searchbox1.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","Cardlist","monsters","map","SearchBox","placeholder","handlechange","type","onChange","app","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","FilteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,wBCEFA,EAAM,SAAAC,GACf,OACA,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,uBACHC,IAAI,YAEJ,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCPbC,EAAS,SAAAR,GAQtB,OACA,qBAAKC,UAAU,YAAf,SACCD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC3B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCXNO,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC4ECG,E,kDA9Eb,aAAc,IAAD,8BACX,gBA2BFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SA3BpC,EAAKC,MAAM,CACTb,SAAS,GAcTU,YAAc,IAjBL,E,qDAuBb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAASkB,S,oBAKzC,WAAS,IAAD,EACuBC,KAAKN,MAA5Bb,EADA,EACAA,SAASU,EADT,EACSA,YACTU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAGA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBACrG,OACE,sBAAK9B,UAAU,MAAf,UAcG,iDACA,cAAC,EAAD,CACAW,YAAY,kBAEbC,aAAce,KAAKf,eAEf,cAAC,EAAD,CAAUJ,SAAUoB,W,GAxDZI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6a3a47fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import react from 'react';\r\nimport './card.style.css';\r\nexport const Card= props=>{\r\n    return(\r\n    <div className='card-container'>\r\n        <img \r\n        src={`https://robohash.org/${props.monster.id}set=set2&size=15x15`}\r\n        alt=\"monster\" \r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    )\r\n}","import react from \"react\";\r\nimport './card-list.style.css';\r\nimport { Card } from \"../components1/card.component\";\r\nexport const Cardlist=props=>{\r\n//  return(\r\n//  console.log(props),\r\n//  <div>Hello</div>,\r\n//  <div>{props.name}</div>,\r\n// <div className='card-list'>{props.children}</div>\r\n   \r\n//  )\r\nreturn(\r\n<div className='card-list'>\r\n{props.monsters.map(monster => (\r\n<Card key={monster.id} monster={monster}/>\r\n))}\r\n</div>\r\n);\r\n}","import react from 'react';\r\nimport './searchbox.style.css';\r\n\r\nexport const SearchBox=({placeholder,handlechange})=> (\r\n    <input\r\n    className='search' \r\n    type=\"search\" \r\n    placeholder={placeholder} \r\n    onChange={handlechange}\r\n        />\r\n);","import logo from './logo.svg';\nimport './App.css';\nimport { Component } from 'react';\nimport {Cardlist} from './components/card-list/card-listcomponents';\nimport {SearchBox} from './components/searchbox/searchbox1';\nclass app extends Component {\n  constructor(){\n    super();\n    this.state={\n      monsters:[\n        // {\n        //   name:'Photoshop',\n        //   id:'ps'\n        // },\n        // {\n        //   name:'Illustrator',\n        //   id:'ai'\n        // },\n        // {\n        //   name:'Figma',\n        //   id:'fg'\n        // },\n      ],\n      searchfield : ''\n     \n      // string:'hello'\n    };\n    // this.handlechange=this.handlechange.bind(this);\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response =>response.json() )\n    .then(users => this.setState({monsters:users}));\n  }\n  handlechange=(e)=>{\n    this.setState({searchfield:e.target.value}\n     )}\n  render(){\n    const{monsters,searchfield}= this.state;\n    const FilteredMonsters = monsters.filter(monster =>monster.name.toLowerCase().includes(searchfield.toLowerCase()))\n  return (\n    <div className=\"App\">\n      {/* <input type=\"search\" placeholder='search monsters' onChange={e=>{\n        this.setState({searchfield:e.target.value},\n          ()=>console.log(this.state)\n        );\n        } }\n        />\n     <Cardlist name='yuha'>yuhaa</Cardlist>\n     <Cardlist name='yuha'>\n     { this.state.monsters.map(monster => (\n        <h1 key={monster.id}>{monster.name}</h1>\n      ))}\n       </Cardlist>   \n       <Cardlist monsters={this.state.monsters} /> */}\n       <h1>Monster Rolodex</h1>\n       <SearchBox\n       placeholder='search-monsters'\n      // \n      handlechange={this.handlechange}\n          />\n          <Cardlist monsters={FilteredMonsters} />\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          {this.state.string}\n        </p>\n        {/* <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <button onClick={()=>this.setState({string:'Hello mc'})}>Learn more</button>\n        </a> */}\n       \n          {/* <button onClick={()=>this.setState({string:'Hello mc'})}>donotpress</button>\n      </header> */}\n    \n    </div>\n  );\n  }\n}\n\nexport default app;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}